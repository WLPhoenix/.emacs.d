import unittest
import sys

from mock import Mock, patch

from qatp_core.qatp import http_requests
from qatp_core.qatp.state import CommonState


class HttpRequestsTests(unittest.TestCase):

    def setUp(self):
        self.URL = "http://google.com"

    @patch('qatp_core.qatp.http_requests._request')
    def test_head(self, _request):
        http_requests.head(self.URL)
        self.failUnless(_request.called)
        _request.assert_called_with("HEAD", self.URL, True)

    @patch('qatp_core.qatp.http_requests._request')
    def test_get(self, _request):
        http_requests.get(self.URL)
        self.failUnless(_request.called)
        _request.assert_called_with("GET", self.URL, True)

    @patch('qatp_core.qatp.http_requests._request')
    def test_post(self, _request):
        http_requests.post(self.URL)
        self.failUnless(_request.called)
        _request.assert_called_with("POST", self.URL, True)

    @patch('qatp_core.qatp.http_requests._request')
    def test_put(self, _request):
        http_requests.put(self.URL)
        self.failUnless(_request.called)
        _request.assert_called_with("PUT", self.URL, True)

    @patch('qatp_core.qatp.http_requests._request')
    def test_patch(self, _request):
        http_requests.patch(self.URL)
        self.failUnless(_request.called)
        _request.assert_called_with("PATCH", self.URL, True)

    @patch('qatp_core.qatp.http_requests._request')
    def test_delete(self, _request):
        http_requests.delete(self.URL)
        self.failUnless(_request.called)
        _request.assert_called_with("DELETE", self.URL, True)


def main():
    unittest.main()


if __name__ == '__main__':
    main()

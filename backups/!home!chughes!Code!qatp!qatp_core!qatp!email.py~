import socket

import boto

from .decorators import prevent_termination
from .log import sql_log
from .state import CommonState

@prevent_termination
def send_email(subject, body, msgformat="html", recipients="default"):
    """Send an email to the qatp list using Amazon's SES.
    recipients is either the mailing list (as defined in config/defaults/email.json)
    or a comma-seperated list of emails"""

    qs_common = CommonState()
    dryrun = qs_common.state['dryrun']

    fqdn = socket.getfqdn()
    real_host = fqdn if not fqdn.startswith("qatp.") else None

    msg_subject = qs_common.email['prefix'] + subject
    msg_recipients = qs_common.email['recipients'].get(recipients, recipients)
    if isinstance(msg_recipients, list):
        msg_recipients = ",".join(msg_recipients)

    footer="""<hr><i>For additional details visit
    <a href="https://integration.digitalreasoning.com">https://integration.digitalreasoning.com</a>.
    """

    if real_host:
        footer += """<br>## This was a dev run on <a href="https://%s">https://%s</a> ##
        """ % (real_host, real_host)
    else:
        footer += "</i></body></html>"

    msg_body = body + footer

    if dryrun or not qs_common.email['enabled']:
        sql_log().info("Not sending email; contents of email to %s would be:\nsubject: %s\nbody: %s" %
            (msg_recipients, msg_subject, msg_body))
        return

    conn = boto.ses.SESConnection()
    conn.send_email(qs_common.email['sender'], msg_subject, None, msg_recipients,
                    format=msgformat, html_body=msg_body)

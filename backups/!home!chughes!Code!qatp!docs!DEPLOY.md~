# QATP Deployment Guide

<br/>
## AWS
<br/>
###Creating the AMI
QATP uses [Packer](http://www.packer.io) to create Amazon Machine Images (AMIs) for deployment on AWS. The code to do this is located in `./packer/`, with some references to `./scripts/`.

At this time, there is no good way to automate packer installation, so go to http://www.packer.io/downloads.html, select your OS, and follow their install guides.

After packer is installed, you will need to create the appropriate `variables.json` file.

```bash
cd ./packer/
cp ./example-variables.json ./variables.json
```
Then edit `variables.json` to have the appropriate values. After this file is correct, run the following to verify your files and execute the build:

```bash
# Verify packer json file is correct
packer verify --var-file=variables.json ami.json

# Run the packer build
packer build --var-file=variables.json ami.json
```

If you packer build succeeds, you will be given an AMI id in the log output. You can use this AMI id to create a QATP instance with the appropriate virtualenv created, and all dependencies installed.

<br/>
###Launching a QATP host

You will need access to AWS EC2 tooling to launch a QATP host, whether that be through ElasticFox/ElasticWolf or the EC2 CLI.

__** OFFICIAL QATP:__
If deploying within the official QA AWS account, these are the appropriate parameters:

```
# Development (devint.qa.digitalreasoning.com)
ami-id: ami-ef425f86
keypair: qatp-coordinator-dev
security-group: qatp_dev
instance-type: t1.micro
availability-zone: us-east-1c #currenly in us-east-1d, plan to migrate

# Integration (int.qa.digitalreasoning.com)
ami-id: ami-ef425f86
keypair: qatp-coordinator
security-group: qatp_prod
instance-type: t1.micro
availability-zone: us-east-1c
```

<br/>
###Additional QATP Host configuration

Many of the remaining configuration steps are handled automatically, or prompted, through the deployment script. This section details any manual steps that need to be taken beyond that.

<br/>
####Deploy keyfiles
For security reasons, the keyfiles QATP uses to connect to StackdIO-created hosts are not deployed along with the AMI. These files need to manually be copied into `/root/.ssh

__** OFFICIAL QATP:__
If you do not have access to the existing QATP key files, you will either need to get a copy from the maintainers, or to generate a new keypair and update the StackdIO instance with the new keys. Please confirm anything to this nature with one of the maintainers:

* Charlie - <charlie.penner@digitalreasoning.com>
* Cory - <cory.hughes@digitalreasoning.com>

__Note:__ This step is not currently included in the `./fabfile/` scripts either, but they could probably be added later. See below for more detail.

<br/>
## Code Deployment
<br/>
### Fabric
Qatp uses [Fabric](http://www.fabfile.org/) to handle code deployment. For the deployment scripts to work appropriately, you will need a host that has been set up with the appropriate dependencies. The easiest way to do this is to create the host using the AMI generated above, but the deployment script will notify you of which dependencies are unmet.

There are also one-time configuration steps which are handled by the `./fabfile/` scripts. These are detailed below.

<br/>
####Nginx certificates
QATP uses [Nginx](http://wiki.nginx.org/Main) as its server on live environments. We need to provide the appropriate certificates for nginx to work properly. These will be stored on the host at `/etc/nginx/certs/`.

<br/>
####Keyring configuration
You will need to set up the keyring, similar to as described in the [Install Guide](INSTALL.md), on the remote host. If you are using the default QATP user (`qatp_user`), then you will simply be promted to enter the password for that user. Note that this password must be consistent across all systems accessed with this user (Nexus, StackdIO), thus it is preferrable for this to be an LDAP managed user.

If you are using custom users, then you have a few options:

1. Manually set up the keyring on the remote host (Make sure you set the keyring inside of the QATP virtualenv)
1. Edit `./fabfile/__init__.py:_get_user_config()` to prompt for the appropriate users.

__** OFFICIAL QATP:__
You will need to get the password for the `qatp_user` account from one of the maintainers, listed above.

<br/>
####AWS SES
If you have set up the correct profile in `~/.aws/config`, as described in the [Install Guide](INSTALL.md), then your prompts will be auto-populated with that information. Otherwise, you will need to provide the access keys and region for the AWS SES account that QATP is to use for sending emails.

__** OFFICIAL QATP:__
You will need to get the appropriate keys for the QA AWS account from one of the maintainers, listed above.
